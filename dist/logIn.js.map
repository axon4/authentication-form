{"mappings":"A,Q,U,I,E,W,E,C,E,E,C,E,E,E,iB,A,O,I,A,C,E,S,C,E,G,K,E,O,C,C,E,C,O,C,G,K,E,C,I,E,C,C,E,A,Q,C,C,E,C,I,E,C,G,E,Q,C,C,E,O,C,C,E,C,E,E,I,C,E,O,C,E,E,O,E,E,O,A,C,I,E,A,M,uB,E,I,O,E,I,C,mB,C,C,E,Q,C,S,C,C,C,E,C,C,E,C,C,E,E,iB,C,G,A,C,E,E,Q,A,E,Q,S,C,C,C,E,O,c,C,E,O,C,U,C,I,I,E,I,K,E,W,C,E,a,C,C,ECAe,OAAA,EAGd,IAAI,SAAU,CACb,OAAO,AAAqB,IAArB,IAAI,CAAC,MAAM,CAAC,IAAI,AACxB,CAEA,IAAI,CAAW,CAAE,CAAuB,CAAE,CAA2B,CAAE,CAAiB,CAAE,CACzF,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,GAChB,EAAM,SAAS,CAAC,GAAG,CAAC,eACpB,EAAM,SAAS,CAAC,MAAM,CAAC,UACvB,EAAM,SAAS,CAAG,CACnB,CAEA,MAAM,CAAW,CAAE,CAAuB,CAAE,CAA2B,CAAE,CACxE,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,GACnB,EAAM,SAAS,CAAC,MAAM,CAAC,eACvB,EAAM,SAAS,CAAC,GAAG,CAAC,UACpB,EAAM,SAAS,CAAG,EACnB,C,a,CAlBA,IAAA,CAAA,MAAA,CAAS,IAAI,G,CAmBd,C,G,I,E,E,SCjBA,MAAM,EAAa,SAAS,cAAc,CAAC,SACrC,EAAkB,SAAS,cAAc,CAAC,eAC1C,EAAgB,SAAS,cAAc,CAAC,YACxC,EAAqB,SAAS,cAAc,CAAC,kBAC7C,EAAS,SAAS,cAAc,CAAC,UACjC,EAAS,IAAI,EAAA,OAAK,CAExB,SAAS,IACR,QAAQ,GAAG,CAAC,OAAQ,EAAW,KAAK,CAAC,MAAM,CAAG,GAAK,EAAc,KAAK,CAAC,MAAM,CAAG,GAAK,EAAO,OAAO,EACnG,EAAO,SAAS,CAAC,EAAW,KAAK,CAAC,MAAM,CAAG,GAAK,EAAc,KAAK,CAAC,MAAM,CAAG,GAAK,EAAO,OAAO,CAAG,SAAW,MAAM,CAAC,eACtH,CAEA,EAAW,gBAAgB,CAAC,QAAS,KACpC,IAAM,EAAgB,ACdhB,SAAuB,CAAa,EAC1C,IAAM,EAA0B,EAAE,CAIlC,MAFK,eAAe,IAAI,CAAC,IAAQ,EAAc,IAAI,CAAC,iBAE7C,CACR,EDQqC,EAAW,KAAK,EAEpD,GAAI,EAAc,MAAM,CAAG,EAAG,CAC7B,IAAM,EAAkB,EAAc,IAAI,CAAC,UAE3C,EAAO,GAAG,CAAC,QAAS,EAAY,EAAiB,EAClD,MAAO,EAAO,KAAK,CAAC,QAAS,EAAY,GAEzC,GACD,GACA,EAAc,gBAAgB,CAAC,QAAS,KACvC,IAAM,EAAgB,ACjBhB,SAA0B,CAAgB,EAChD,IAAM,EAA0B,EAAE,CAIlC,OAFI,EAAS,MAAM,CAAG,GAAG,EAAc,IAAI,CAAC,oBAErC,CACR,EDWwC,EAAc,KAAK,EAE1D,GAAI,EAAc,MAAM,CAAG,EAAG,CAC7B,IAAM,EAAkB,EAAc,IAAI,CAAC,UAE3C,EAAO,GAAG,CAAC,WAAY,EAAe,EAAoB,EAC3D,MAAO,EAAO,KAAK,CAAC,WAAY,EAAe,GAE/C,GACD","sources":["<anon>","client/errors.ts","client/logIn.ts","server/authentication.ts"],"sourcesContent":["var $iS5Ep$bcrypt = require(\"bcrypt\");\n\n\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\n\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n\n      var $parcel$global = globalThis;\n    \nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequire7715\"];\n\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequire7715\"] = parcelRequire;\n}\n\nvar parcelRegister = parcelRequire.register;\nparcelRegister(\"2e3ig\", function(module, exports) {\n\n$parcel$export(module.exports, \"default\", () => $2d27a4926d48228d$export$2e2bcd8739ae039);\nclass $2d27a4926d48228d$export$2e2bcd8739ae039 {\n    get isEmpty() {\n        return this.errors.size === 0;\n    }\n    set(key, field, label, labelText) {\n        this.errors.add(key);\n        field.classList.add(\"input-error\");\n        label.classList.remove(\"hidden\");\n        label.innerHTML = labelText;\n    }\n    unset(key, field, label) {\n        this.errors.delete(key);\n        field.classList.remove(\"input-error\");\n        label.classList.add(\"hidden\");\n        label.innerHTML = \"\";\n    }\n    constructor(){\n        this.errors = new Set();\n    }\n}\n\n});\n\n\nvar $2e3ig = parcelRequire(\"2e3ig\");\n\nfunction $c5059ae32e2739e6$export$8af08fe4ebc6e116(eMail) {\n    const inValidations = [];\n    if (!/\\S+@\\S+\\.\\S+/.test(eMail)) inValidations.push(\"inValid eMail\");\n    return inValidations;\n}\nfunction $c5059ae32e2739e6$export$ab2f087aa77a7500(passWord) {\n    const inValidations = [];\n    if (passWord.length < 4) inValidations.push(\"inValid passWord\");\n    return inValidations;\n}\nclass $c5059ae32e2739e6$export$ab85ecd77ce6a5cd {\n    constructor(hash){\n        this.hash = hash;\n    }\n}\nconst $c5059ae32e2739e6$var$saltRounds = 7;\nasync function $c5059ae32e2739e6$export$d6af199866bfb566(plain) {\n    return await new Promise((resolve, reject)=>{\n        (0, ($parcel$interopDefault($iS5Ep$bcrypt))).hash(plain, $c5059ae32e2739e6$var$saltRounds, (error, hash)=>{\n            if (error) reject(error);\n            else resolve(new $c5059ae32e2739e6$export$ab85ecd77ce6a5cd(hash));\n        });\n    });\n}\nasync function $c5059ae32e2739e6$export$61bb00ddedae72e4(plain, hash) {\n    return await (0, ($parcel$interopDefault($iS5Ep$bcrypt))).compare(plain, hash.hash);\n}\n\n\nconst $366d5ad13c694160$var$eMailField = document.getElementById(\"eMail\");\nconst $366d5ad13c694160$var$eMailErrorLabel = document.getElementById(\"eMail-error\");\nconst $366d5ad13c694160$var$passWordField = document.getElementById(\"passWord\");\nconst $366d5ad13c694160$var$passWordErrorLabel = document.getElementById(\"passWord-error\");\nconst $366d5ad13c694160$var$button = document.getElementById(\"submit\");\nconst $366d5ad13c694160$var$errors = new (0, $2e3ig.default)();\nfunction $366d5ad13c694160$var$upDateButtonAbility() {\n    console.log(\"bool\", $366d5ad13c694160$var$eMailField.value.length > 0 && $366d5ad13c694160$var$passWordField.value.length > 0 && $366d5ad13c694160$var$errors.isEmpty);\n    $366d5ad13c694160$var$button.classList[$366d5ad13c694160$var$eMailField.value.length > 0 && $366d5ad13c694160$var$passWordField.value.length > 0 && $366d5ad13c694160$var$errors.isEmpty ? \"remove\" : \"add\"](\"btn-disabled\");\n}\n$366d5ad13c694160$var$eMailField.addEventListener(\"input\", ()=>{\n    const inValidations = (0, $c5059ae32e2739e6$export$8af08fe4ebc6e116)($366d5ad13c694160$var$eMailField.value);\n    if (inValidations.length > 0) {\n        const forMattedErrors = inValidations.join(\"<br />\");\n        $366d5ad13c694160$var$errors.set(\"eMail\", $366d5ad13c694160$var$eMailField, $366d5ad13c694160$var$eMailErrorLabel, forMattedErrors);\n    } else $366d5ad13c694160$var$errors.unset(\"eMail\", $366d5ad13c694160$var$eMailField, $366d5ad13c694160$var$eMailErrorLabel);\n    $366d5ad13c694160$var$upDateButtonAbility();\n});\n$366d5ad13c694160$var$passWordField.addEventListener(\"input\", ()=>{\n    const inValidations = (0, $c5059ae32e2739e6$export$ab2f087aa77a7500)($366d5ad13c694160$var$passWordField.value);\n    if (inValidations.length > 0) {\n        const forMattedErrors = inValidations.join(\"<br />\");\n        $366d5ad13c694160$var$errors.set(\"passWord\", $366d5ad13c694160$var$passWordField, $366d5ad13c694160$var$passWordErrorLabel, forMattedErrors);\n    } else $366d5ad13c694160$var$errors.unset(\"passWord\", $366d5ad13c694160$var$passWordField, $366d5ad13c694160$var$passWordErrorLabel);\n    $366d5ad13c694160$var$upDateButtonAbility();\n});\n\n\n//# sourceMappingURL=logIn.js.map\n","export default class Errors {\n\terrors = new Set<string>();\n\n\tget isEmpty() {\n\t\treturn this.errors.size === 0;\n\t};\n\n\tset(key: string, field: HTMLInputElement, label: HTMLParagraphElement, labelText: string) {\n\t\tthis.errors.add(key);\n\t\tfield.classList.add('input-error');\n\t\tlabel.classList.remove('hidden');\n\t\tlabel.innerHTML = labelText;\n\t};\n\n\tunset(key: string, field: HTMLInputElement, label: HTMLParagraphElement) {\n\t\tthis.errors.delete(key);\n\t\tfield.classList.remove('input-error');\n\t\tlabel.classList.add('hidden');\n\t\tlabel.innerHTML = '';\n\t};\n};","import Errors from './errors';\nimport { validateEMail, validatePassWord } from '../server/authentication';\n\nconst eMailField = document.getElementById('eMail') as HTMLInputElement;\nconst eMailErrorLabel = document.getElementById('eMail-error') as HTMLParagraphElement;\nconst passWordField = document.getElementById('passWord') as HTMLInputElement;\nconst passWordErrorLabel = document.getElementById('passWord-error') as HTMLParagraphElement;\nconst button = document.getElementById('submit') as HTMLButtonElement;\nconst errors = new Errors();\n\nfunction upDateButtonAbility() {\n\tconsole.log('bool', eMailField.value.length > 0 && passWordField.value.length > 0 && errors.isEmpty)\n\tbutton.classList[eMailField.value.length > 0 && passWordField.value.length > 0 && errors.isEmpty ? 'remove' : 'add']('btn-disabled');\n};\n\neMailField.addEventListener('input', () => {\n\tconst inValidations = validateEMail(eMailField.value);\n\n\tif (inValidations.length > 0) {\n\t\tconst forMattedErrors = inValidations.join('<br />');\n\n\t\terrors.set('eMail', eMailField, eMailErrorLabel, forMattedErrors);\n\t} else errors.unset('eMail', eMailField, eMailErrorLabel);\n\n\tupDateButtonAbility();\n});\npassWordField.addEventListener('input', () => {\n\tconst inValidations = validatePassWord(passWordField.value);\n\n\tif (inValidations.length > 0) {\n\t\tconst forMattedErrors = inValidations.join('<br />');\n\n\t\terrors.set('passWord', passWordField, passWordErrorLabel, forMattedErrors);\n\t} else errors.unset('passWord', passWordField, passWordErrorLabel);\n\n\tupDateButtonAbility();\n});","import bCrypt from 'bcrypt';\n\nexport function validateEMail(eMail: string): string[] {\n\tconst inValidations: string[] = [];\n\n\tif (!/\\S+@\\S+\\.\\S+/.test(eMail)) inValidations.push('inValid eMail');\n\n\treturn inValidations;\n};\n\nexport function validatePassWord(passWord: string): string[] {\n\tconst inValidations: string[] = [];\n\n\tif (passWord.length < 4) inValidations.push('inValid passWord');\n\n\treturn inValidations;\n};\n\nexport class Hash {\n\tconstructor (readonly hash: string) {};\n};\n\nconst saltRounds = 7;\n\nexport async function hash(plain: string): Promise<Hash> {\n\treturn await new Promise((resolve, reject) => {\n\t\tbCrypt.hash(plain, saltRounds, (error, hash) => {\n\t\t\tif (error) reject(error);\n\t\t\telse resolve(new Hash(hash));\n\t\t});\n\t});\n};\n\nexport async function authenticate(plain: string, hash: Hash): Promise<boolean> {\n\treturn await bCrypt.compare(plain, hash.hash);\n};"],"names":["require","$parcel$global","globalThis","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","parcelRegister","Object","defineProperty","get","$2d27a4926d48228d$export$2e2bcd8739ae039","set","s","enumerable","configurable","isEmpty","errors","size","key","field","label","labelText","add","classList","remove","innerHTML","unset","delete","constructor","Set","$2e3ig","$366d5ad13c694160$var$eMailField","document","getElementById","$366d5ad13c694160$var$eMailErrorLabel","$366d5ad13c694160$var$passWordField","$366d5ad13c694160$var$passWordErrorLabel","$366d5ad13c694160$var$button","$366d5ad13c694160$var$errors","default","$366d5ad13c694160$var$upDateButtonAbility","console","log","value","length","addEventListener","inValidations","eMail","test","push","forMattedErrors","join","passWord"],"version":3,"file":"logIn.js.map","sourceRoot":"../"}